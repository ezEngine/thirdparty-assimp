ez_cmake_init()

ez_requires_assimp()

# Get the name of this folder as the project name
get_filename_component(PROJECT_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME_WE)

file(GLOB_RECURSE SRC_FILES "${CMAKE_CURRENT_SOURCE_DIR}/*.cpp" "${CMAKE_CURRENT_SOURCE_DIR}/*.cc" "${CMAKE_CURRENT_SOURCE_DIR}/*.h" "${CMAKE_CURRENT_SOURCE_DIR}/*.c" "${CMAKE_CURRENT_SOURCE_DIR}/*.inl" "${CMAKE_CURRENT_SOURCE_DIR}/*.txt" "${CMAKE_CURRENT_SOURCE_DIR}/*.cmake")

if (EZ_3RDPARTY_ASSIMP_DRACO_SUPPORT)
  target_compile_definitions(${PROJECT_NAME} PRIVATE ASSIMP_ENABLE_DRACO)
else()
  foreach(str ${SRC_FILES})
    if (${str} MATCHES "contrib/draco")
      list(REMOVE_ITEM SRC_FILES ${str})
    endif()
  endforeach()
endif()

ez_create_target(SHARED_LIBRARY ${PROJECT_NAME} NO_EZ_PREFIX NO_UNITY NO_WARNINGS_AS_ERRORS ENABLE_RTTI NO_DEBUG MANUAL_SOURCE_FILES "${SRC_FILES}")

target_compile_definitions(${PROJECT_NAME} PUBLIC BUILDSYSTEM_ENABLE_AI_SUPPORT)
target_compile_definitions(${PROJECT_NAME} PUBLIC ASSIMP_DLL)
target_compile_definitions(${PROJECT_NAME} PRIVATE ASSIMP_BUILD_DLL_EXPORT)

target_include_directories(${PROJECT_NAME} PUBLIC "${CMAKE_CURRENT_SOURCE_DIR}/include")
target_include_directories(${PROJECT_NAME} PRIVATE "${CMAKE_CURRENT_SOURCE_DIR}/contrib/utf8cpp/source")

target_include_directories(${PROJECT_NAME} PRIVATE
  "${CMAKE_CURRENT_SOURCE_DIR}/code"
  "${CMAKE_CURRENT_SOURCE_DIR}"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib/draco/src"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib/zlib"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib/unzip"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib/rapidjson/include"
  "${CMAKE_CURRENT_SOURCE_DIR}/contrib/pugixml/src"
)

target_compile_definitions(${PROJECT_NAME} PRIVATE
  ASSIMP_BUILD_NO_3DS_IMPORTER
  ASSIMP_BUILD_NO_EXPORT
  ASSIMP_BUILD_NO_3MF_IMPORTER
  ASSIMP_BUILD_NO_AC_IMPORTER
  ASSIMP_BUILD_NO_AMF_IMPORTER
  ASSIMP_BUILD_NO_ASE_IMPORTER
  ASSIMP_BUILD_NO_ASSBIN_IMPORTER
  ASSIMP_BUILD_NO_B3D_IMPORTER
  ASSIMP_BUILD_NO_BVH_IMPORTER
  ASSIMP_BUILD_NO_C4D_IMPORTER
  ASSIMP_BUILD_NO_COB_IMPORTER
  ASSIMP_BUILD_NO_COLLADA_IMPORTER
  ASSIMP_BUILD_NO_CSM_IMPORTER
  ASSIMP_BUILD_NO_DXF_IMPORTER
  ASSIMP_BUILD_NO_HMP_IMPORTER
  ASSIMP_BUILD_NO_IFC_IMPORTER
  ASSIMP_BUILD_NO_COMPRESSED_IFC
  ASSIMP_BUILD_NO_IQM_IMPORTER
  ASSIMP_BUILD_NO_IRR_IMPORTER
  ASSIMP_BUILD_NO_IRRMESH_IMPORTER
  ASSIMP_BUILD_NO_LWO_IMPORTER
  ASSIMP_BUILD_NO_LWS_IMPORTER
  ASSIMP_BUILD_NO_M3D_IMPORTER
  ASSIMP_BUILD_NO_MD2_IMPORTER
  ASSIMP_BUILD_NO_MD3_IMPORTER
  ASSIMP_BUILD_NO_MD5_IMPORTER
  ASSIMP_BUILD_NO_MDC_IMPORTER
  ASSIMP_BUILD_NO_MDL_IMPORTER
  ASSIMP_BUILD_NO_MMD_IMPORTER
  ASSIMP_BUILD_NO_MS3D_IMPORTER
  ASSIMP_BUILD_NO_NDO_IMPORTER
  ASSIMP_BUILD_NO_NFF_IMPORTER
  ASSIMP_BUILD_NO_OFF_IMPORTER
  ASSIMP_BUILD_NO_OGRE_IMPORTER
  ASSIMP_BUILD_NO_OPENGEX_IMPORTER
  ASSIMP_BUILD_NO_PLY_IMPORTER
  ASSIMP_BUILD_NO_Q3BSP_IMPORTER
  ASSIMP_BUILD_NO_Q3D_IMPORTER
  ASSIMP_BUILD_NO_RAW_IMPORTER
  ASSIMP_BUILD_NO_SIB_IMPORTER
  ASSIMP_BUILD_NO_SMD_IMPORTER
  ASSIMP_BUILD_NO_STL_IMPORTER
  ASSIMP_BUILD_NO_TERRAGEN_IMPORTER
  ASSIMP_BUILD_NO_3D_IMPORTER
  ASSIMP_BUILD_NO_X3D_IMPORTER
  ASSIMP_BUILD_NO_XGL_IMPORTER
  ASSIMP_BUILD_NO_COMPRESSED_XGL
  ASSIMP_BUILD_NO_X_IMPORTER
  ASSIMP_BUILD_NO_COMPRESSED_X
  ASSIMP_BUILD_NO_STEP_IMPORTER
)

function(ez_link_target_assimp TARGET_NAME)

	ez_requires_assimp()

	target_link_libraries(${TARGET_NAME} PRIVATE assimp)

endfunction()
